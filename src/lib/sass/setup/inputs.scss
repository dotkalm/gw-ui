
input[type='text'],
input[type='email'],
input[type='number'],
input[type='password'],
select,
textarea {
	background: $input-bg !important;
	border: $input-border;
	border-radius: $input-border-radius;
	padding: $input-padding;
	line-height: calc(#{$input-height} - #{$input-text-offset});
	color: $input-color;
	transition: background $md-speed $ease, border $md-speed $ease, color $md-speed $ease, opacity $md-speed $ease;
	display: block;
	width: 100%;
	font-family: $input-font;
	font-size: $input-font-size;
	text-align: left;
	font-weight: $input-font-weight;
	&.minimal,
	&.minimal:focus,
	&.minimal:hover,
	.minimal &,
	.minimal &:focus,
	.minimal &:hover {
		padding: inherit;
		font-size: inherit;
		color: inherit;
		border: inherit;
		display: inherit;
		font-weight: inherit;
		line-height: inherit;
		border-radius: inherit;
		width: inherit;
		height: inherit;
	}
	.large & {
		font-size: $input-large-font-size;
		line-height: calc(#{$input-large-height} - #{$input-text-offset});
	}
	.small &,
	.tiny & {
		font-size: $input-small-font-size;
		line-height: calc(#{$input-small-height} - #{$input-text-offset});
	}
	.tiny & {
		line-height: calc(#{$input-tiny-height} - #{$input-text-offset});
	}
	&::-webkit-input-placeholder {
		color: $placeholder-color;
		transition: color $md-speed $ease;
	}
	&:-moz-placeholder {
		color: $placeholder-color;
		transition: color $md-speed $ease;
	}
	&::-moz-placeholder {
		color: $placeholder-color;
		transition: color $md-speed $ease;
	}
	&:-ms-input-placeholder {
	   color: $placeholder-color;
	   transition: color $md-speed $ease;
	}
	&:hover {
		background: $input-hover-bg;
		color: $input-hover-color;
		border: $input-hover-border;
		&::-webkit-input-placeholder {
			color: $placeholder-hover-color;
		}
		&:-moz-placeholder {
			color: $placeholder-hover-color;
		}
		&::-moz-placeholder {
			color: $placeholder-hover-color;
		}
		&:-ms-input-placeholder {
		   color: $placeholder-hover-color;
		}
		~ .icon {
			color: $placeholder-hover-color;
		}
	}
	&:focus {
		background: $input-focus-bg;
		color: $input-focus-color;
		border: $input-focus-border;
		&::-webkit-input-placeholder {
			color: $placeholder-focus-color;
		}
		&:-moz-placeholder {
			color: $placeholder-focus-color;
		}
		&::-moz-placeholder {
			color: $placeholder-focus-color;
		}
		&:-ms-input-placeholder {
		   color: $placeholder-focus-color;
		}
		~ .icon {
			color: $input-focus-color;
		}
	}
	.input-with-label &:focus,
	.has-value .input-with-label & {
		~ label {
			transform: scale(0.75) translate3d(0, -1rem, 0);
			opacity: .5;
		}
	}
	.input-with-label &:focus {
		~ label {
			color: $main-color;
			opacity: 1;
		}
	}
	.disabled &,
	&:disabled {
		color: $placeholder-color;
		background: darken($input-bg, 2%);
	}

}

input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

select {
	padding-right: 1.85rem;
}

input[type='text'],
input[type='email'],
input[type='number'],
input[type='password'],
select {
	height: $btn-height;
	.large & {
		height: $input-large-height;
	}
	.small & {
		height: $input-small-height;
	}
	.tiny & {
		height: $input-tiny-height;
		padding: 0 .75em;
		display: inline-block;
	}
	.label-above &,
	.input-with-label & {
		~ label {
			font-weight: $input-label-weight;
		}
	}

	.input-with-label & {
		~ label {
			line-height: calc(#{$btn-height} - .2em);
			font-size: $input-font-size;
			letter-spacing: $input-letter-spaceing;
			padding-top: .5em;
		}
		.large & {
			~ label {
				line-height: calc(#{$input-large-height} - .2em);
				font-size: $input-large-font-size;
			}
		}
		.small & {
			~ label {
				line-height: calc(#{$input-small-height} - .2em);
				font-size: $input-small-font-size;
			}
		}
		.tiny & {
			~ label {
				line-height: calc(#{$input-tiny-height} - .2em);
				font-size: $input-tiny-font-size;
			}
		}
	}
}


textarea {
	line-height: $base-line-height;
	padding-top: .5em;
	padding-bottom: .5em;
	resize: none;
	border-radius: $base-border-radius;
}

label {
	cursor: pointer;
	transition: background $md-speed $ease, border $md-speed $ease, color $md-speed $ease, opacity $md-speed $ease;
}

input[type='checkbox'],
input[type='radio'] {
	display: block;
	vertical-align: middle;
	width: 18px;
	height: 18px;
	margin: -2px 0 0 0;
	background: transparent !important;
	border: 2px solid rgba($text-color, .4);
	transition: background $md-speed $ease, border $md-speed $ease, color $md-speed $ease, opacity $md-speed $ease;
	~ label {
		display: block;
		vertical-align: middle;
		font-size: $p-font-size;
		color: $light-text-color;
		font-weight: $medium;
		margin-top: 0;
		margin-left: $gutter-tight/2;
	}
	&:checked {
		border-color: $main-color;
		~ label {
			color: $text-color;
		}
	}
}

input[type='checkbox'] {
	border-radius: 2px;
	position: relative;
	&:checked {
		background: $main-color !important;
		&:after {
			opacity: 1;
		}
	}
	&:after {
		content: '';
		display: block;
		position: absolute;
    width: 3px;
    height: 8px;
    top: 1px;
    left: 5px;
		border-bottom: 2px solid $white;
		border-right: 2px solid $white;
		transform: rotate(45deg);
		transition: opacity $md-speed $ease;
		opacity: 0;
	}
}

input[type='radio'] {
	border-radius: 50%;
	border: 2px solid $light-text-color;
	position: relative;
	&:after {
		content: '';
		display: block;
		background: $main-color;
		border-radius: 50%;
		position: absolute;
		top: 2px;
		right: 2px;
		bottom: 2px;
		left: 2px;
		opacity: 0;
		transform: scale(.25);
		transition: transform $md-speed $ease, opacity $md-speed $ease;
	}
	&:checked {
		&:after {
			opacity: 1;
			transform: scale(1);
		}
	}
}

.react-datepicker__input-container {
	width: 100%;
}

input[type='checkbox'].toggle {
	display:none;
}

input.toggle {
	& ~ label {
		& .switch {
			display: inline-block;
			position: relative;
			width: 32px;
			height: 8px;
			margin: -5px 0 -2px 0;
			vertical-align: middle;
			color: $input-hover-bg;
			background: darken($light-grey, 5%);
			border-radius: 20px;
			transition: background 0.3s $ease, border 0.3s $ease, color 0.3s $ease, opacity 0.3s $ease;
			&:after {
				content: '';
				display: block;
				width: 16px;
				height: 16px;
				position: absolute;
				top: 50%;
				left: 0;
				margin-top: -8px;
				border: none;
				background: darken($light-grey, 12%);
				border-radius: 50%;
				transition: transform $md-speed $ease, border $md-speed $ease, background $md-speed $ease, color $md-speed $ease, box-shadow $md-speed $ease;
			}
			& + .text {
				display: inline-block;
				margin-left: .625rem;
				position: relative;
		    height: 20px;
		    vertical-align: middle;
		    margin-top: -.2em;
				& .off-label,
				& .on-label {
					transition: transform 0.3s $ease, opacity 0.3s $ease, visibility 0.3s $ease;
					position: absolute;
					top: 0;
					left: 0;
					line-height: 20px;
					pointer-events: none;
				}
				& .off-label {
					color: $light-text-color;
				}
				& .on-label {
					opacity: 0;
					visibility: hidden;
					transform: translate3d(-.5rem, 0, 0);
				}
			}
		}
	}
	&:hover {
		& ~ label {
			& .switch {
				background: darken($light-grey, 3%);
				&:after {
					background: $white;
					background: darken($light-grey, 8%);
					box-shadow: 0 5px 10px rgba($text-color, .1);
				}
			}
		}
	}
	&:checked {
		& ~ label {
			& .switch {
				background: $main-color;
				color: $main-color;
				&:after {
					background: $white;
					transform: translate3d(100%, 0, 0);
					box-shadow: 0 5px 10px rgba($text-color, .1);
				}
			}
			& .text {
				& .off-label {
					opacity: 0;
					visibility: hidden;
					transform: translate3d(.5rem, 0, 0);
				}
				& .on-label {
					opacity: 1;
					visibility: visible;
					transform: translate3d(0, 0, 0);
				}
			}
		}
	}
}

.input-label {
	font-size: $sm-font-size;
	color: $light-text-color;
	display: inline-block;
	vertical-align: middle;
}

.input-wrap {
	position: relative;
	@include font-smooth();
	.select-icon {
		pointer-events: none;
	}
	.flex-wrap {
		display: flex;
		align-items: center;
		justify-content: flex-start;
		.no-grow {
			flex-grow: 0;
			flex-shrink: 0;
		}
		.grow {
			flex-grow: 1;
			width: 1px;
		}
	}
	&:not(.underlined) {
		.label-above {
			position: relative;
			input[type='text'],
			input[type='email'],
			input[type='number'],
			input[type='password'],
			.select-wrap {
				margin-top: 1rem;
				display: inline-block;
				width: 100%;
			}
			> .icon {
				top: calc(50% + .5rem);
			}
			.select-wrap {
				position: relative;
			}
		}
	}
	.label-above {
		* {
			~ label {
				line-height: 1.5em;
				position: absolute;
				top: -.1rem;
				left: 0;
				font-size: $sm-font-size;
				color: $light-text-color;
				font-size: calc(#{$input-font-size} * .75);
				@include ellipsis();
			}
			&:focus {
				~ label {
					color: $input-focus-color;
				}
			}
		}
	}
	.input-with-label {
		position: relative;
		display: block;
		~ .icon,
		~ .error-message,
		~ .secondary{
			position: absolute;
			top: 50%;
			transform: translate3d(0, calc(-50% + .25rem), 0);
		}
		.icon{
			right: 0;
			&.before {
				left: 0;
				right: auto;
			}
		}


		label {
			position: absolute;
			left: 0;
			top: 0;
			padding-top: .5em;
			font-size: $input-font-size;
			pointer-events: none;
			transform-origin: top left;
			transition: opacity $md-speed $ease, transform $md-speed $ease, top $md-speed $ease, line-height $md-speed $ease, color $md-speed $ease;
		}
	}

	&.underlined {
		label {
			top: -.2rem;
		}
		.icon{
			right: 0;
			&.before {
				left: 0;
				right: auto;
			}
		}
		*.input-with-label {
			label {
				top: 0;
			}
		}
	}

	&.underlined,
	.input-with-label {
		input[type="text"],
		input[type="password"],
		input[type="email"],
		input[type='number'],
		select {
			padding-top: .95em;
			border-radius: 0;
			border-left: 0;
			border-right: 0;
			border-top: 0;
			padding-left: 0;
			padding-right: 0;
		}
		.icon {
			top: calc(50% + .25em);
		}
	}

	&.has-icon-before {
		.input-with-label {
			label,
			input[type="text"],
			input[type="password"],
			input[type="email"],
			input[type="number"] {
				padding-left: 1.5rem;
				&:focus {
					~ label {
						transform: scale(0.75) translate3d(-1.5rem, -1rem, 0);
					}
				}
			}
		}
	}

	&.has-icon-before.has-value {
		.input-with-label {
			label,
			input[type="text"],
			input[type="password"],
			input[type="email"],
			input[type="number"] {
				padding-left: 1.5rem;
				~ label {
					transform: scale(0.75) translate3d(-1.5rem, -1rem, 0);
				}
			}
		}
	}
	&.has-icon-after {
		.input-with-label {
			label,
			input[type="text"],
			input[type="password"],
			input[type="email"],
			input[type="number"] {
				padding-right: 1.5rem;
			}
		}
		.error-message {
			margin-right: 25px;
		}
	}

	&.has-icon-after,
	&.has-icon-after.filled-in,
	&.has-icon-after.underlined {
		input[type="text"],
		input[type="password"],
		input[type="email"],
		input[type="number"] {
			padding-right: 2rem;
		}
	}
	&.has-icon-before,
	&.has-icon-before.filled-in,
	&.has-icon-before.underlined {
		input[type="text"],
		input[type="password"],
		input[type="email"],
		input[type="number"] {
			padding-left: 2rem;
		}
	}

	&.error {
		  input, select {
			border-color: $alert;
		 }
		.error-message {
			color: $alert;
			transition: opacity $md-speed $ease;
		}
	}

	&.validated > input {
		border-bottom: 1px solid $success;
	}

	i.material-icons,
	.icon,
	.error-message,
	.secondary {
		position: absolute;
		top: 50%;
		transform: translate3d(0, -50%, 0);
		color: $placeholder-color;
	}

	.icon{
		transition: color $md-speed $ease;
		right: .6rem;
		&.before {
			left: .6rem;
			right: auto;
		}
	}

	.error-message,
	.secondary{
		font-size:10px;
		right: 0;
	}
}

.align-right {
	input[type="checkbox"],
	input[type="radio"] {
		margin-right: 0;
	}
}

.color-swatch {
	width: $btn-height;
	height: $btn-height;
	> .swatch {
		width: 100%;
		height: 100%;
		padding: 2px;
		label {
			width: 100%;
			height: 100%;
			border-radius: $base-border-radius;
			margin: 0;
			&:after {
				content: '';
				border: 1px solid transparent;
				position: absolute;
				top: 0;
				left: 0;
				bottom: 0;
				right: 0;
				border-radius: $base-border-radius + 2px;
				transition: border-color $md-speed $ease;
			}
			&:hover {
				&:after {
					border-color: $hr-color;
				}
			}
		}
	}
	input:checked,
	input:checked:hover {
		+ label {
			&:after {
				border-color: $text-color;
			}
		}
	}
	&.large {
		width: $btn-large-height;
		height: $btn-large-height;
	}
	&.small {
		width: $btn-small-height;
		height: $btn-small-height;
	}
	&.tiny {
		width: $btn-tiny-height;
		height: $btn-tiny-height;
	}
}